//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoccerTeams.DatabaseOperationsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerDTO", Namespace="http://schemas.datacontract.org/2004/07/DTOs", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PlayerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoccerTeams.DatabaseOperationsService.TeamDTO TeamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TeamIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoccerTeams.DatabaseOperationsService.TeamDTO Team {
            get {
                return this.TeamField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamField, value) != true)) {
                    this.TeamField = value;
                    this.RaisePropertyChanged("Team");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamDTO", Namespace="http://schemas.datacontract.org/2004/07/DTOs", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TeamDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoachField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoccerTeams.DatabaseOperationsService.PlayerDTO[] PlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coach {
            get {
                return this.CoachField;
            }
            set {
                if ((object.ReferenceEquals(this.CoachField, value) != true)) {
                    this.CoachField = value;
                    this.RaisePropertyChanged("Coach");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoccerTeams.DatabaseOperationsService.PlayerDTO[] Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
    [System.SerializableAttribute()]
    public partial class ServiceData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DatabaseOperationsService.IDataAccessService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IDataAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/AddPlayer", ReplyAction="http://tempuri.org/IDataAccessService/AddPlayerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/AddPlayerServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Mandatory)]
        void AddPlayer(SoccerTeams.DatabaseOperationsService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/AddPlayer", ReplyAction="http://tempuri.org/IDataAccessService/AddPlayerResponse")]
        System.Threading.Tasks.Task AddPlayerAsync(SoccerTeams.DatabaseOperationsService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindPlayer", ReplyAction="http://tempuri.org/IDataAccessService/FindPlayerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/FindPlayerServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        SoccerTeams.DatabaseOperationsService.PlayerDTO FindPlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindPlayer", ReplyAction="http://tempuri.org/IDataAccessService/FindPlayerResponse")]
        System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.PlayerDTO> FindPlayerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindAllPlayers", ReplyAction="http://tempuri.org/IDataAccessService/FindAllPlayersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/FindAllPlayersServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        SoccerTeams.DatabaseOperationsService.PlayerDTO[] FindAllPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindAllPlayers", ReplyAction="http://tempuri.org/IDataAccessService/FindAllPlayersResponse")]
        System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.PlayerDTO[]> FindAllPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/EditPlayer", ReplyAction="http://tempuri.org/IDataAccessService/EditPlayerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/EditPlayerServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Mandatory)]
        void EditPlayer(SoccerTeams.DatabaseOperationsService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/EditPlayer", ReplyAction="http://tempuri.org/IDataAccessService/EditPlayerResponse")]
        System.Threading.Tasks.Task EditPlayerAsync(SoccerTeams.DatabaseOperationsService.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/DeletePlayer", ReplyAction="http://tempuri.org/IDataAccessService/DeletePlayerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/DeletePlayerServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Mandatory)]
        void DeletePlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/DeletePlayer", ReplyAction="http://tempuri.org/IDataAccessService/DeletePlayerResponse")]
        System.Threading.Tasks.Task DeletePlayerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindTeam", ReplyAction="http://tempuri.org/IDataAccessService/FindTeamResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/FindTeamServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        SoccerTeams.DatabaseOperationsService.TeamDTO FindTeam(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindTeam", ReplyAction="http://tempuri.org/IDataAccessService/FindTeamResponse")]
        System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.TeamDTO> FindTeamAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindAllTeams", ReplyAction="http://tempuri.org/IDataAccessService/FindAllTeamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/FindAllTeamsServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        SoccerTeams.DatabaseOperationsService.TeamDTO[] FindAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FindAllTeams", ReplyAction="http://tempuri.org/IDataAccessService/FindAllTeamsResponse")]
        System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.TeamDTO[]> FindAllTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FilterPlayersByAge", ReplyAction="http://tempuri.org/IDataAccessService/FilterPlayersByAgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoccerTeams.DatabaseOperationsService.ServiceData), Action="http://tempuri.org/IDataAccessService/FilterPlayersByAgeServiceDataFault", Name="ServiceData", Namespace="http://schemas.datacontract.org/2004/07/DataAccessService")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        SoccerTeams.DatabaseOperationsService.PlayerDTO[] FilterPlayersByAge(int minAge, int maxAge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/FilterPlayersByAge", ReplyAction="http://tempuri.org/IDataAccessService/FilterPlayersByAgeResponse")]
        System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.PlayerDTO[]> FilterPlayersByAgeAsync(int minAge, int maxAge);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataAccessServiceChannel : SoccerTeams.DatabaseOperationsService.IDataAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataAccessServiceClient : System.ServiceModel.ClientBase<SoccerTeams.DatabaseOperationsService.IDataAccessService>, SoccerTeams.DatabaseOperationsService.IDataAccessService {
        
        public DataAccessServiceClient() {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddPlayer(SoccerTeams.DatabaseOperationsService.PlayerDTO player) {
            base.Channel.AddPlayer(player);
        }
        
        public System.Threading.Tasks.Task AddPlayerAsync(SoccerTeams.DatabaseOperationsService.PlayerDTO player) {
            return base.Channel.AddPlayerAsync(player);
        }
        
        public SoccerTeams.DatabaseOperationsService.PlayerDTO FindPlayer(int id) {
            return base.Channel.FindPlayer(id);
        }
        
        public System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.PlayerDTO> FindPlayerAsync(int id) {
            return base.Channel.FindPlayerAsync(id);
        }
        
        public SoccerTeams.DatabaseOperationsService.PlayerDTO[] FindAllPlayers() {
            return base.Channel.FindAllPlayers();
        }
        
        public System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.PlayerDTO[]> FindAllPlayersAsync() {
            return base.Channel.FindAllPlayersAsync();
        }
        
        public void EditPlayer(SoccerTeams.DatabaseOperationsService.PlayerDTO player) {
            base.Channel.EditPlayer(player);
        }
        
        public System.Threading.Tasks.Task EditPlayerAsync(SoccerTeams.DatabaseOperationsService.PlayerDTO player) {
            return base.Channel.EditPlayerAsync(player);
        }
        
        public void DeletePlayer(int id) {
            base.Channel.DeletePlayer(id);
        }
        
        public System.Threading.Tasks.Task DeletePlayerAsync(int id) {
            return base.Channel.DeletePlayerAsync(id);
        }
        
        public SoccerTeams.DatabaseOperationsService.TeamDTO FindTeam(int id) {
            return base.Channel.FindTeam(id);
        }
        
        public System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.TeamDTO> FindTeamAsync(int id) {
            return base.Channel.FindTeamAsync(id);
        }
        
        public SoccerTeams.DatabaseOperationsService.TeamDTO[] FindAllTeams() {
            return base.Channel.FindAllTeams();
        }
        
        public System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.TeamDTO[]> FindAllTeamsAsync() {
            return base.Channel.FindAllTeamsAsync();
        }
        
        public SoccerTeams.DatabaseOperationsService.PlayerDTO[] FilterPlayersByAge(int minAge, int maxAge) {
            return base.Channel.FilterPlayersByAge(minAge, maxAge);
        }
        
        public System.Threading.Tasks.Task<SoccerTeams.DatabaseOperationsService.PlayerDTO[]> FilterPlayersByAgeAsync(int minAge, int maxAge) {
            return base.Channel.FilterPlayersByAgeAsync(minAge, maxAge);
        }
    }
}
