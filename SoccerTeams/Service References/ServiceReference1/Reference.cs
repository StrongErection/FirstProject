//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoccerTeams.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddPlayer", ReplyAction="http://tempuri.org/IService/AddPlayerResponse")]
        void AddPlayer(DTOs.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddPlayer", ReplyAction="http://tempuri.org/IService/AddPlayerResponse")]
        System.Threading.Tasks.Task AddPlayerAsync(DTOs.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindPlayer", ReplyAction="http://tempuri.org/IService/FindPlayerResponse")]
        DTOs.PlayerDTO FindPlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindPlayer", ReplyAction="http://tempuri.org/IService/FindPlayerResponse")]
        System.Threading.Tasks.Task<DTOs.PlayerDTO> FindPlayerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAllPlayers", ReplyAction="http://tempuri.org/IService/FindAllPlayersResponse")]
        DTOs.PlayerDTO[] FindAllPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAllPlayers", ReplyAction="http://tempuri.org/IService/FindAllPlayersResponse")]
        System.Threading.Tasks.Task<DTOs.PlayerDTO[]> FindAllPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditPlayer", ReplyAction="http://tempuri.org/IService/EditPlayerResponse")]
        void EditPlayer(DTOs.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditPlayer", ReplyAction="http://tempuri.org/IService/EditPlayerResponse")]
        System.Threading.Tasks.Task EditPlayerAsync(DTOs.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePlayer", ReplyAction="http://tempuri.org/IService/DeletePlayerResponse")]
        void DeletePlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePlayer", ReplyAction="http://tempuri.org/IService/DeletePlayerResponse")]
        System.Threading.Tasks.Task DeletePlayerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTeam", ReplyAction="http://tempuri.org/IService/FindTeamResponse")]
        DTOs.TeamDTO FindTeam(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTeam", ReplyAction="http://tempuri.org/IService/FindTeamResponse")]
        System.Threading.Tasks.Task<DTOs.TeamDTO> FindTeamAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAllTeams", ReplyAction="http://tempuri.org/IService/FindAllTeamsResponse")]
        DTOs.TeamDTO[] FindAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAllTeams", ReplyAction="http://tempuri.org/IService/FindAllTeamsResponse")]
        System.Threading.Tasks.Task<DTOs.TeamDTO[]> FindAllTeamsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : SoccerTeams.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<SoccerTeams.ServiceReference1.IService>, SoccerTeams.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddPlayer(DTOs.PlayerDTO player) {
            base.Channel.AddPlayer(player);
        }
        
        public System.Threading.Tasks.Task AddPlayerAsync(DTOs.PlayerDTO player) {
            return base.Channel.AddPlayerAsync(player);
        }
        
        public DTOs.PlayerDTO FindPlayer(int id) {
            return base.Channel.FindPlayer(id);
        }
        
        public System.Threading.Tasks.Task<DTOs.PlayerDTO> FindPlayerAsync(int id) {
            return base.Channel.FindPlayerAsync(id);
        }
        
        public DTOs.PlayerDTO[] FindAllPlayers() {
            return base.Channel.FindAllPlayers();
        }
        
        public System.Threading.Tasks.Task<DTOs.PlayerDTO[]> FindAllPlayersAsync() {
            return base.Channel.FindAllPlayersAsync();
        }
        
        public void EditPlayer(DTOs.PlayerDTO player) {
            base.Channel.EditPlayer(player);
        }
        
        public System.Threading.Tasks.Task EditPlayerAsync(DTOs.PlayerDTO player) {
            return base.Channel.EditPlayerAsync(player);
        }
        
        public void DeletePlayer(int id) {
            base.Channel.DeletePlayer(id);
        }
        
        public System.Threading.Tasks.Task DeletePlayerAsync(int id) {
            return base.Channel.DeletePlayerAsync(id);
        }
        
        public DTOs.TeamDTO FindTeam(int id) {
            return base.Channel.FindTeam(id);
        }
        
        public System.Threading.Tasks.Task<DTOs.TeamDTO> FindTeamAsync(int id) {
            return base.Channel.FindTeamAsync(id);
        }
        
        public DTOs.TeamDTO[] FindAllTeams() {
            return base.Channel.FindAllTeams();
        }
        
        public System.Threading.Tasks.Task<DTOs.TeamDTO[]> FindAllTeamsAsync() {
            return base.Channel.FindAllTeamsAsync();
        }
    }
}
